/*
** WaveView -- CSS for main WaveView box and accessories
** Copyright (C) 2021-2025 Tactile Interactive, all rights reserved
*/

@use "../widgets/common.scss";

// top of the WaveView where the graphics goes.  Height dictated by where the
// user last dragged the resize box in the corner, in WaveView state.  Width
// comes from the window width.  hmmm...
.WaveView {
	position: relative;
	display: flex;
	width: 100%;


	/* canvas itself: bottom layer - outside of widget area*/
	canvas.GLScene {
		position: absolute;
		display: block;
		height: 100%;  // will conform to widgetArea
		width: 100%;
		border: 1px #666 inset;
		z-index: 10;
	}

	// bumpers only show in WELL continuum.
	.bumper {
		// width set by JS either zero or bumper width
		height: 100%;
		flex: 0 0;  // no growing/shrinking, but style attr sets flex-basis
		z-index: 20;

		background-color: common.$voltageColor;
		//background-color: #0f06;  // for testing
	}


	// widget area, containing most of the widgets that float above (in front of) the canvas
	// overlaying the wave drawing are here, like the voltage line, voltage axis, buttons, grow box....
	// Fitting between the bumpers cuz if they go over the bumpers you can't see them.
	// automatically moves widgets if/when dimensions change.
	// see also volts.scss for more widgetArea
	.widgetArea {
		position: relative;
		flex: 1 1;
		height: 100%;
		z-index: 20;

		// dragging the voltage line right where an axis lable is, avoid text selection
		.voltageAxis {
			user-select: none;
		}

		// overlay with frame count, virtual time and other stuff, on top of canvas
		.timeOverlay {
			position: absolute;
			//pointer-events: none;  // need to click through for voltage
			z-index: 30;
			width: 100%;
			height: 100%;

			// numbers in upper corners.  Note, INSIDE the bumpers, not on top
			.northWestWrapper, .northEastWrapper {
				position: absolute;
				top: .5em;
				text-shadow: 1px 1px 3px #800f;
			}

			.northWestWrapper { left: 2em; }
			.northEastWrapper { right: 2em; }
		}

		// a loose association of buttons to appear on top of the canvas, with similar behaviors
		// .startStopOverlay and .VoltSidebar both include this class
		.waveButtonPanel {
			position: absolute;
			display: flex;
			flex-direction: row;
			z-index: 30;

			background-color: transparent;

			// but subelements DO have pointer-events
			pointer-events: none;
			user-select: none;

			button {
				display: inline-block;
				font-size: 1em;
				padding: 0;
				margin: 0;
				border: none;
				background-color: transparent ;
				pointer-events: auto;
				cursor: pointer;
			}
			//button:hover {
			//	border-color: common.$voltageColor ;
			//}
			//button:active {
			//	border-color: common.$voltageDarkerColor ;
			//}
		}

		// object that encloses start/stop/singlestep buttons
		.StartStopOverlay {
			left: 2em;
			bottom: 1em;
			height: 1em;
			width: 10em;
			img {
				height: 1em;
				width: 1em;
				pointer-events: auto;
			}
			img.singleStepWidget {
				width: 1.1667em;
				margin: 0 0 0 2em;
			}
		}
	}  // end of widgetArea

	.sizeBox {
		position: absolute;
		pointer-events: auto;
		bottom: 1px;
		right: 0;
		// width & height set in JS, search for SIZE_BOX_SIZE
		z-index: 50;
		cursor: ns-resize;
		opacity: 0.5;
		background-image: linear-gradient(45deg #fff, #000, #fff, #000, #fff, #000, #fff, #000);


		&:hover { opacity: 1; }
		&:active { opacity: 1; }
	}
}

.spinner {
	position: absolute;
	left: calc(50% - 100px);
	top: 20%;
}

.errorView {
	color: #f80;
}
