/*
** view -- CSS for WaveView and contents
** Copyright (C) 2021-2023 Tactile Interactive, all rights reserved
*/

@use "../widgets/common.scss";

// top of the WaveView where the graphics goes.  Height dictated by where the
// user last dragged the resize box in the corner, in WaveView state.  Width
// comes from the window width.  hmmm...
.WaveView {
	position: relative;
	display: flex;
	width: 100%;

	// view area is the canvas, GLView and everything that should be the same size
	// like the voltage area.  EXCLUDING the voltage sidebar.
	// height and width set in the Render method.
	.viewArea {
		flex: 1 1 auto;
		position: relative;
		height: 100%;

		/* canvas itself: bottom layer */
		canvas.GLView {
			position: absolute;
			width: 100%;
			height: 100%;
			border: 1px #666 inset;
			z-index: 10;
		}

		// overlay with frame count, virtual time and other stuff, on top of canvas
		.viewOverlay {
			position: absolute;
			pointer-events: none;  // need to click through for voltage
			z-index: 40;
			width: 100%;
			height: 100%;

			// numbers in upper corners
			.northWestWrapper, .northEastWrapper {
				position: absolute;
				top: .5em;
				z-index: 10;
				text-shadow: 1px 1px 3px #000f;
			}

			.northWestWrapper { left: 2em; }
			.northEastWrapper { right: 2em; }

			.sizeBox {
				position: absolute;
				pointer-events: auto;
				bottom: 1px;
				right: 0;
				width: common.$sizeBoxSize; height: common.$sizeBoxSize;
				z-index: 20;
				cursor: ns-resize;
				opacity: 0.1;

				&:hover { opacity: 1; }
				&:active { opacity: 1; }
			}
		}

		svg.VoltageArea {
			position: relative;
			width: 100%;
			height: 100%;
			z-index: 30;
			transform: scale(1, -1);

			pointer-events: none;  // need to click through for size box

			path.visibleLine {
				stroke: common.$voltageColor;
				stroke-width: 3;
				pointer-events: none;
			}

			path.tactileLine {
				stroke: none;
				stroke-width: 20;
				pointer-events: stroke;  // but this is sensitive
				cursor: pointer;
			}

			rect.wellSlab {
				fill: common.$voltageColor;

			}
		}  // end of VoltageArea
	}  // end of viewArea

	.VoltageSidebar {
		// this is a column flex box
		height: 100%;
		display: flex;
		flex-direction: column;

		// but particpates in its parent's row flex box.  Width and display set by code in WaveView.render()
		text-align: center;
		flex: 0 0;

		background-color: common.$voltageColor;

		// zoom in/out buttons
		button {
			background-color: common.$voltageColor;
			border: none;
			flex: 0 0;
			display: block;
			border-radius: .5em;
			padding: 0;

			img {
				width: 1em;
			}
		}
		button:hover {
			background-color: common.$voltageLighterColor;
		}
		button:active {
			background-color: #44f;
		}

		.voltRail {
			position: relative;
			flex: 1 1;
			margin: 2px;
			border: 1px inset #aaa;
			background-color: common.$voltageDarkerColor;

			.voltThumb {
				position: absolute;
				left: 0;
				right: 0;
				height: 2em;
				line-height: 2em;
				cursor: ns-resize;

				border: 1px outset #aaa;
				background-color: common.$voltageColor;

				text-align: center;
			}
		}

		//input[type=range] {
		//	display: block;
		//	width: 100%;
		//	flex: 1 1;
		//	appearance: slider-vertical;  // works on safari & chrome, not firefox
		//	color: #000;
		//	background-color: #voltageColor;
		//	border: none;
		//	accent-color: #fd0;
		//}
	}
}

.spinner {
	//position: absolute;
	left: calc(50% - 100px);
	top: 20%;
}
