/*
** volts -- CSS for voltage stuff as shown in the WaveView
** Copyright (C) 2024-2025 Tactile Interactive, all rights reserved
*/

@use "../widgets/common.scss";

// top of the WaveView where the graphics goes.  Height dictated by where the
// user last dragged the resize box in the corner, in WaveView state.  Width
// comes from the window width.  hmmm...
.WaveView {
	// the setting for showVoltage chooses one of these classes for VoltOverlay
	// display:none gets no events.  so change visibilty instead.
	.alwaysShowVoltage {visibility: visible}
	.hoverShowVoltage {visibility: hidden}
	&.wvHovering .hoverShowVoltage {visibility: visible}
	.neverShowVoltage {visibility: hidden}

	// encloses the actual glview, the timeOverlay, and the VoltOverlay
	// the VoltOverlay is what hides/shows with mouseover (see above)
	// see also WaveView.scss for more widgetArea
	.widgetArea .VoltOverlay {
		position: absolute;
		display: block;
		width: 100%;
		height: 100%;

		.VoltArea {
			position: absolute;
			width: 100%;
			height: 100%;
			z-index: 30;
			transform: scale(1, -1);
			pointer-events: all;

			// for pointer enter/leave events
			.hoverBox {
				fill: transparent;
			}

			path.visibleLine {
				stroke: common.$voltageColor;
				stroke-width: 3px;
				fill: transparent;
				pointer-events: none;
			}

			path.tactileLine {
				stroke: none;
				stroke-width: 20px;
				fill: transparent;
				pointer-events: stroke;  // but this is sensitive
				cursor: pointer;
			}

			.voltageAxis {
				stroke: common.$voltageColor;
				fill: none;
				font-family: verdana, helvetica, sans-serif;
				font-size: .7em;

				// for some reason, the labels that d3 generates have all the text upside down.
				// also have to offset them the height of the canvas...
				g {
					scale: 1 -1;
				}
			}

		}  // end of VoltArea



		// buttons on right to scroll and zoom the voltage.  mixes in .waveButtonPanel
		.VoltSidebar {
			right: 2em;
			bottom: .5em;
			width: 7em;
			z-index: 35;
			text-align: center;


			// scroll & zoom in/out buttons
			button {
				width: 1em;
				flex: 1em;
				height: 1em;
				pointer-events: auto
				img {
					width:1em;
					height: 1em;
					opacity: 50%;
				}
			}
		}
	}  // end of widgetArea VoltOverlay

}

